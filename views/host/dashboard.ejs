<%- include('../layout', { title: 'Host Dashboard' }) %>

<div class="container my-5">
    <h1 class="mb-4">Host Dashboard</h1>
    
    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-body">
                    <h3 class="card-title">Today's Reservations</h3>
                    <div class="table-responsive">
                        <table class="table" id="todayReservationsTable">
                            <thead>
                                <tr>
                                    <th>Time</th>
                                    <th>Name</th>
                                    <th>Phone</th>
                                    <th>Table</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Today's reservations will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Upcoming Reservations</h3>
                    <div class="table-responsive">
                        <table class="table" id="upcomingReservationsTable">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Time</th>
                                    <th>Name</th>
                                    <th>Phone</th>
                                    <th>Table</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Upcoming reservations will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Table Status</h3>
                    <div class="restaurant-layout mb-4">
                        <!-- Tables will be loaded here -->
                    </div>
                    <div class="table-status-legend">
                        <div class="d-flex align-items-center mb-2">
                            <div class="table-status available me-2"></div>
                            <span>Available</span>
                        </div>
                        <div class="d-flex align-items-center">
                            <div class="table-status booked me-2"></div>
                            <span>Booked</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
const socket = io();

// Load today's reservations
async function loadTodayReservations() {
    try {
        const response = await fetch('/reservations/all');
        const reservations = await response.json();
        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const todayReservations = reservations.filter(reservation => {
            const reservationDate = new Date(reservation.date);
            return reservationDate.toDateString() === today.toDateString();
        });

        const tbody = document.querySelector('#todayReservationsTable tbody');
        tbody.innerHTML = '';

        todayReservations.sort((a, b) => new Date(a.date) - new Date(b.date));

        todayReservations.forEach(reservation => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${new Date(reservation.date).toLocaleTimeString()}</td>
                <td>${reservation.customerName}</td>
                <td>${reservation.phoneNumber}</td>
                <td>${reservation.tableNumber}</td>
                <td>
                    <select class="form-select form-select-sm status-select" data-id="${reservation._id}">
                        <option value="pending" ${reservation.status === 'pending' ? 'selected' : ''}>Pending</option>
                        <option value="confirmed" ${reservation.status === 'confirmed' ? 'selected' : ''}>Confirmed</option>
                        <option value="cancelled" ${reservation.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
                    </select>
                </td>
            `;
            tbody.appendChild(tr);
        });

        // Add event listeners for status changes
        addStatusChangeListeners();
    } catch (error) {
        console.error('Error loading today\'s reservations:', error);
    }
}

// Load upcoming reservations
async function loadUpcomingReservations() {
    try {
        const response = await fetch('/reservations/all');
        const reservations = await response.json();
        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const upcomingReservations = reservations.filter(reservation => {
            const reservationDate = new Date(reservation.date);
            return reservationDate > today;
        });

        const tbody = document.querySelector('#upcomingReservationsTable tbody');
        tbody.innerHTML = '';

        upcomingReservations.sort((a, b) => new Date(a.date) - new Date(b.date));

        upcomingReservations.forEach(reservation => {
            const reservationDate = new Date(reservation.date);
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${reservationDate.toLocaleDateString()}</td>
                <td>${reservationDate.toLocaleTimeString()}</td>
                <td>${reservation.customerName}</td>
                <td>${reservation.phoneNumber}</td>
                <td>${reservation.tableNumber}</td>
                <td>
                    <select class="form-select form-select-sm status-select" data-id="${reservation._id}">
                        <option value="pending" ${reservation.status === 'pending' ? 'selected' : ''}>Pending</option>
                        <option value="confirmed" ${reservation.status === 'confirmed' ? 'selected' : ''}>Confirmed</option>
                        <option value="cancelled" ${reservation.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
                    </select>
                </td>
            `;
            tbody.appendChild(tr);
        });

        // Add event listeners for status changes
        addStatusChangeListeners();
    } catch (error) {
        console.error('Error loading upcoming reservations:', error);
    }
}

// Add event listeners for status changes
function addStatusChangeListeners() {
    document.querySelectorAll('.status-select').forEach(select => {
        select.addEventListener('change', async (e) => {
            const id = e.target.dataset.id;
            const status = e.target.value;
            
            try {
                await fetch(`/reservations/${id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status })
                });
            } catch (error) {
                console.error('Error updating reservation:', error);
                alert('Error updating reservation status');
            }
        });
    });
}

// Load tables
async function loadTables() {
    try {
        const response = await fetch('/reservations/tables');
        const tables = await response.json();
        const layout = document.querySelector('.restaurant-layout');
        layout.innerHTML = '';

        tables.forEach(table => {
            const tableElement = document.createElement('div');
            tableElement.className = `table ${table.status}`;
            tableElement.style.left = `${(table.tableNumber - 1) % 2 * 45}%`;
            tableElement.style.top = `${Math.floor((table.tableNumber - 1) / 2) * 25}%`;
            tableElement.innerHTML = `Table ${table.tableNumber}`;
            layout.appendChild(tableElement);
        });
    } catch (error) {
        console.error('Error loading tables:', error);
    }
}

// Initialize dashboard
document.addEventListener('DOMContentLoaded', () => {
    loadTodayReservations();
    loadUpcomingReservations();
    loadTables();

    // Handle real-time updates
    socket.on('tableStatusChanged', () => {
        loadTables();
        loadTodayReservations();
        loadUpcomingReservations();
    });
});
</script>

<style>
.restaurant-layout {
    position: relative;
    width: 100%;
    height: 400px;
    border: 2px solid #ddd;
    margin-bottom: 1rem;
    padding: 1rem;
    background-color: #f8f9fa;
}

.table {
    position: absolute;
    width: 60px;
    height: 60px;
    border: 2px solid #333;
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 0.8rem;
    transition: all 0.3s ease;
}

.table.available {
    background-color: #28a745;
    color: white;
}

.table.booked {
    background-color: #dc3545;
    color: white;
}

.table-status {
    width: 20px;
    height: 20px;
    border-radius: 3px;
}

.table-status.available {
    background-color: #28a745;
}

.table-status.booked {
    background-color: #dc3545;
}
</style> 
