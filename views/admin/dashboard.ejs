<%- include('../layout', { title: 'Admin Dashboard' }) %>

<div class="container my-5">
    <h1 class="mb-4">Admin Dashboard</h1>
    
    <div class="row">
        <div class="col-md-3">
            <div class="list-group">
                <a href="#reservations" class="list-group-item list-group-item-action active" data-bs-toggle="list">
                    Reservations
                </a>
                <a href="#tables" class="list-group-item list-group-item-action" data-bs-toggle="list">
                    Tables
                </a>
                <a href="#users" class="list-group-item list-group-item-action" data-bs-toggle="list">
                    Users
                </a>
            </div>
        </div>
        
        <div class="col-md-9">
            <div class="tab-content">
                <div class="tab-pane fade show active" id="reservations">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title">Reservations</h3>
                            <div class="table-responsive">
                                <table class="table" id="reservationsTable">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Phone</th>
                                            <th>Date</th>
                                            <th>Table</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Reservations will be loaded here -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="tables">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title">Tables</h3>
                            <div class="restaurant-layout mb-4">
                                <!-- Tables will be loaded here -->
                            </div>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTableModal">
                                Add Table
                            </button>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="users">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title">Users</h3>
                            <div class="table-responsive">
                                <table class="table" id="usersTable">
                                    <thead>
                                        <tr>
                                            <th>Username</th>
                                            <th>Role</th>
                                            <th>Created At</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Users will be loaded here -->
                                    </tbody>
                                </table>
                            </div>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
                                Add User
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Table Modal -->
<div class="modal fade" id="addTableModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Table</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addTableForm">
                    <div class="mb-3">
                        <label for="tableNumber" class="form-label">Table Number</label>
                        <input type="number" class="form-control" id="tableNumber" required>
                    </div>
                    <div class="mb-3">
                        <label for="capacity" class="form-label">Capacity</label>
                        <input type="number" class="form-control" id="capacity" required>
                    </div>
                    <div class="mb-3">
                        <label for="location" class="form-label">Location</label>
                        <select class="form-select" id="location" required>
                            <option value="window">Window</option>
                            <option value="center">Center</option>
                            <option value="bar">Bar</option>
                            <option value="outdoor">Outdoor</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveTableBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" class="form-control" id="username" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" required>
                    </div>
                    <div class="mb-3">
                        <label for="role" class="form-label">Role</label>
                        <select class="form-select" id="role" required>
                            <option value="admin">Admin</option>
                            <option value="manager">Manager</option>
                            <option value="host">Host</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
const socket = io();

// Load reservations
async function loadReservations() {
    try {
        const response = await fetch('/reservations/all');
        const reservations = await response.json();
        const tbody = document.querySelector('#reservationsTable tbody');
        tbody.innerHTML = '';

        reservations.forEach(reservation => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${reservation.customerName}</td>
                <td>${reservation.phoneNumber}</td>
                <td>${new Date(reservation.date).toLocaleString()}</td>
                <td>${reservation.tableNumber}</td>
                <td>
                    <select class="form-select form-select-sm status-select" data-id="${reservation._id}">
                        <option value="pending" ${reservation.status === 'pending' ? 'selected' : ''}>Pending</option>
                        <option value="confirmed" ${reservation.status === 'confirmed' ? 'selected' : ''}>Confirmed</option>
                        <option value="cancelled" ${reservation.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
                    </select>
                </td>
                <td>
                    <button class="btn btn-danger btn-sm delete-reservation" data-id="${reservation._id}">Delete</button>
                </td>
            `;
            tbody.appendChild(tr);
        });

        // Add event listeners for status changes
        document.querySelectorAll('.status-select').forEach(select => {
            select.addEventListener('change', async (e) => {
                const id = e.target.dataset.id;
                const status = e.target.value;
                
                try {
                    await fetch(`/reservations/${id}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ status })
                    });
                } catch (error) {
                    console.error('Error updating reservation:', error);
                    alert('Error updating reservation status');
                }
            });
        });

        // Add event listeners for delete buttons
        document.querySelectorAll('.delete-reservation').forEach(button => {
            button.addEventListener('click', async () => {
                if (confirm('Are you sure you want to delete this reservation?')) {
                    const id = button.dataset.id;
                    try {
                        await fetch(`/reservations/${id}`, {
                            method: 'DELETE'
                        });
                        loadReservations();
                    } catch (error) {
                        console.error('Error deleting reservation:', error);
                        alert('Error deleting reservation');
                    }
                }
            });
        });
    } catch (error) {
        console.error('Error loading reservations:', error);
    }
}

// Load tables
async function loadTables() {
    try {
        const response = await fetch('/reservations/tables');
        const tables = await response.json();
        const layout = document.querySelector('.restaurant-layout');
        layout.innerHTML = '';

        tables.forEach(table => {
            const tableElement = document.createElement('div');
            tableElement.className = `table ${table.status}`;
            tableElement.style.left = `${(table.tableNumber - 1) % 4 * 25}%`;
            tableElement.style.top = `${Math.floor((table.tableNumber - 1) / 4) * 25}%`;
            tableElement.innerHTML = `
                Table ${table.tableNumber}<br>
                (${table.capacity} seats)
            `;
            layout.appendChild(tableElement);
        });
    } catch (error) {
        console.error('Error loading tables:', error);
    }
}

// Load users
async function loadUsers() {
    try {
        const response = await fetch('/admin/users');
        const users = await response.json();
        const tbody = document.querySelector('#usersTable tbody');
        tbody.innerHTML = '';

        users.forEach(user => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${user.username}</td>
                <td>${user.role}</td>
                <td>${new Date(user.createdAt).toLocaleDateString()}</td>
                <td>
                    <button class="btn btn-danger btn-sm delete-user" data-id="${user._id}">Delete</button>
                </td>
            `;
            tbody.appendChild(tr);
        });

        // Add event listeners for delete buttons
        document.querySelectorAll('.delete-user').forEach(button => {
            button.addEventListener('click', async () => {
                if (confirm('Are you sure you want to delete this user?')) {
                    const id = button.dataset.id;
                    try {
                        await fetch(`/admin/users/${id}`, {
                            method: 'DELETE'
                        });
                        loadUsers();
                    } catch (error) {
                        console.error('Error deleting user:', error);
                        alert('Error deleting user');
                    }
                }
            });
        });
    } catch (error) {
        console.error('Error loading users:', error);
    }
}

// Initialize dashboard
document.addEventListener('DOMContentLoaded', () => {
    loadReservations();
    loadTables();
    loadUsers();

    // Handle real-time updates
    socket.on('tableStatusChanged', () => {
        loadTables();
        loadReservations();
    });

    // Handle add table form
    document.getElementById('saveTableBtn').addEventListener('click', async () => {
        const formData = {
            tableNumber: document.getElementById('tableNumber').value,
            capacity: document.getElementById('capacity').value,
            location: document.getElementById('location').value
        };

        try {
            const response = await fetch('/admin/tables', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            if (response.ok) {
                bootstrap.Modal.getInstance(document.getElementById('addTableModal')).hide();
                loadTables();
            } else {
                alert('Error adding table');
            }
        } catch (error) {
            console.error('Error adding table:', error);
            alert('Error adding table');
        }
    });

    // Handle add user form
    document.getElementById('saveUserBtn').addEventListener('click', async () => {
        const formData = {
            username: document.getElementById('username').value,
            password: document.getElementById('password').value,
            role: document.getElementById('role').value
        };

        try {
            const response = await fetch('/admin/users', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            if (response.ok) {
                bootstrap.Modal.getInstance(document.getElementById('addUserModal')).hide();
                loadUsers();
            } else {
                alert('Error adding user');
            }
        } catch (error) {
            console.error('Error adding user:', error);
            alert('Error adding user');
        }
    });
});
</script> 
